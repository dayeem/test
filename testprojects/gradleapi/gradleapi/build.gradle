apply plugin: "java"
apply plugin: "maven"

group = "myorg"
version = 1.0

repositories {
    mavenCentral()
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}

sourceSets {
    api
    impl
}

dependencies {
    apiCompile 'commons-codec:commons-codec:1.5'

    implCompile sourceSets.api.output
    implCompile 'commons-lang:commons-lang:2.6'

   implCompile 'org.springframework.boot:spring-boot-starter-data-jpa:1.1.4.RELEASE'
   implCompile 'org.hibernate:hibernate-core:4.3.6.Final'
   implCompile 'javax.servlet:javax.servlet-api:3.1.0'
   implCompile 'org.slf4j:slf4j-simple:1.7.7'
   implCompile 'org.javassist:javassist:3.15.0-GA'
   implCompile 'mysql:mysql-connector-java:5.1.31'
   implCompile 'postgresql:postgresql:9.1-901-1.jdbc4'
   implCompile 'commons-dbcp:commons-dbcp:1.4' 
   
    testCompile 'junit:junit:4.9'
    testCompile sourceSets.api.output
    testCompile sourceSets.impl.output
    runtime configurations.apiRuntime
    runtime configurations.implRuntime
}

jar {
    from sourceSets.api.output
    from sourceSets.impl.output
    manifest {
		attributes 'Main-Class': 'com.concretepage.Spring4Hibernate4Test'
	}
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri("${buildDir}/repo"))

            addFilter("main") { artifact, file -> artifact.name == project.name }
            ["api", "impl"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                
                // We now have to map our configurations to the correct maven scope for each pom
                ["compile", "runtime"].each { scope ->
                    configuration = configurations[type + scope.capitalize()]
                    ["main", type].each { pomName ->
                        pom(pomName).scopeMappings.addMapping 1, configuration, scope
                    }
                }
            }

        }
    }
}


